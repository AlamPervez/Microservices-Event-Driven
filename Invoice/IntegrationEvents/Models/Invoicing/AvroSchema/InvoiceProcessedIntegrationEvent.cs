// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Invoicing.AvroSchema
{
	using System;
	using System.Collections.Generic;
	using System.Text;
    using EventBus;
    using global::Avro;
	using global::Avro.Specific;
	
	public partial class InvoiceProcessedIntegrationEvent :IntegrationEvent, ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse("{\"type\":\"record\",\"name\":\"InvoiceProcessedIntegrationEvent\",\"namespace\":\"Invoicing" +
				".AvroSchema\",\"fields\":[{\"name\":\"InvoiceId\",\"type\":\"int\"},{\"name\":\"OrderId\",\"type" +
				"\":\"int\"},{\"name\":\"InvoiceAmount\",\"type\":\"double\"}]}");
		private int _InvoiceId;
		private int _OrderId;
		private double _InvoiceAmount;
		public virtual Schema Schema
		{
			get
			{
				return InvoiceProcessedIntegrationEvent._SCHEMA;
			}
		}
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				this._InvoiceId = value;
			}
		}
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				this._OrderId = value;
			}
		}
		public double InvoiceAmount
		{
			get
			{
				return this._InvoiceAmount;
			}
			set
			{
				this._InvoiceAmount = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.InvoiceId;
			case 1: return this.OrderId;
			case 2: return this.InvoiceAmount;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.InvoiceId = (System.Int32)fieldValue; break;
			case 1: this.OrderId = (System.Int32)fieldValue; break;
			case 2: this.InvoiceAmount = (System.Double)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
